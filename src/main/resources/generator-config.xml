<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <context id="DB2Tables" targetRuntime="MyBatis3">
        <commentGenerator> <!-- 去除自动生成的注释 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <!--基础的数据库连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/mvcproject" userId="root"
                        password="123456">
        </jdbcConnection>

        <!--Java类型解析器, 目前也就只有forceBigDecimals可以给你玩 -->
        <javaTypeResolver>
            <!--当数据类型为DECIMAL或者NUMERIC的时候, 如果是true的话则总是使用java.math.BigDecimal -->
            <!--以下是false, 即默认值的情况 -->
            <!--如果有小数或者decimal长度大于18, Java类型为BigDecimal -->
            <!--如果没有小数, 以及decimal长度为10至18, Java类型为Long -->
            <!--如果没有小数, 以及decimal长度为5至9, Java类型为Integer -->
            <!--如果没有小数, 以及decimal长度少于5, Java类型为Short -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!--Domain生成器 -->
        <javaModelGenerator
                targetPackage="cn.qst.ssmdemo.model"
                targetProject=".\src\main\java">

        </javaModelGenerator>

        <!--生成xml文件的代码 -->
        <sqlMapGenerator
                targetPackage="cn.qst.ssmdemo.mapper"
                targetProject=".\src\main\java">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!--生成dao层的接口, 当type为ANNOTATEDMAPPER时是带有@annotation的Mapper, MIXEDMAPPER是XML文件 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="cn.qst.ssmdemo.dao" targetProject=".\src\main\java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>

        <!--字段命名策略过程: <columnRenamingRule> >> property name="useActualColumnNames" -->
        <!--alias属性是个神器, 会为所有SQL都添加, 做关联的时候就非常方便了 -->
        <!--至于什么Example, 全关了就是 -->
        <table tableName="user"
               domainObjectName="User" enableCountByExample="false"
               enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false">

        </table>

        <table  tableName="book"
                domainObjectName="Book" enableCountByExample="false"
                enableUpdateByExample="false" enableDeleteByExample="false"
                enableSelectByExample="false" selectByExampleQueryId="false">
        </table>

        <table tableName="customer"
               domainObjectName="Customer" enableCountByExample="false"
               enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false">

        </table>

    </context>
</generatorConfiguration>

